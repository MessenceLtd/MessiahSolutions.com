@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.Home>
@using ContentModels = Umbraco.Web.PublishedModels;
@{
    Layout = "master.cshtml";
    var backgroundImage = Model.HeroBackgroundImage != null ? Model.HeroBackgroundImage.Url : String.Empty;
    var HomeHeaderTitle = Model.GetProperty("HeroHeader").Value().ToString();
    var HomeHeaderDescription = Model.GetProperty("HeroDescription").Value().ToString();
    var HomeCallToActionCaption = Model.GetProperty("heroCTACaption").Value().ToString();
    var HomeCallToActionUrl = Model.HeroCtalink.Url;
    var HomePageLinkToServices = Model.ServicesLink.Url;
    var HomePageLinkToProjects = string.Empty; // Model.OurProjectsLink.Url;
    var HomePageLinkToOurTeam = Model.Value<IPublishedContent>("ourTeamLink").Url(); // Model.OurTeamLink.Url;

    // Prepare the project Type Codes array from the featured projects parent items (ProjectsType nodes)
    // Will be used for the filtering in desktop / mobile view
    Dictionary<string, string> projectsTypeCodesAndTitle = new Dictionary<string, string>();
    string parentProjectTypeCode = "";
    string parentProjectTypeTitle = "";

    //foreach (var project in Model.Value<IEnumerable<IPublishedContent>>("FeaturedProjects"))
    //{
    //    parentProjectTypeCode = project.Parent.Value("projectTypeUniqueEnglishCode").ToString();
    //    parentProjectTypeTitle = project.Parent.Value("projectsTypeTitle").ToString();

    //    if (!projectsTypeCodesAndTitle.ContainsKey(parentProjectTypeCode))
    //    {
    //        projectsTypeCodesAndTitle.Add(parentProjectTypeCode, parentProjectTypeTitle);
    //    }
    //}

}

<!-- Inspirational technologies -->
<section class="section bg-gray-darker text-center">
    <div class="section-xl homepage-intro-bg" style="background-image: url('@backgroundImage')">
        <div class="container container-wide">
            <div class="row row-50 justify-content-md-center fixed">
            <div class="col-md-10 col-xl-9">
                <h1>@HomeHeaderTitle</h1>
                <p class="big" style="font-weight:bold">
                    @Html.Raw(HomeHeaderDescription.Replace("\n", "<br>"))
                </p>
                <a class="button button-primary" href="@HomeCallToActionUrl">@HomeCallToActionCaption</a>
            </div>
            </div>
        </div>
    </div>
</section>

<!-- Our Services-->
<section class="section section-lg bg-default text-center">
    <div class="container-wide">
        <div class="text-center">
            <a href="@HomePageLinkToServices" class="animated-title-divider">
                <h3>
                    @Model.Value("servicesTitle")
                </h3>
                <div class="divider divider-default"></div>
            </a>
        </div>
        <div class="row row-50 justify-content-sm-center offset-custom-2">

            @if (Model.Services != null)
            {
                var animatedCssClass = "";
                foreach (var service in Model.Value<IEnumerable<IPublishedContent>>("Services"))
                {
                    animatedCssClass = "mdi-" + service.Value("serviceImageType");

                    <div class="col-sm-10 col-lg-4 col-xl-3">
                        <a href="@service.Url()" class="thumbnail-classic flex-md-row flex-lg-column flex-column thumbnail-classic-primary wrapper" title="@service.GetProperty("serviceTitle").Value()">
                            <div class="thumbnail-classic-icon unit-left"><span class="icon mdi @animatedCssClass"></span></div>
                            <div class="thumbnail-classic-caption unit-body">
                                <h6 class="thumbnail-classic-title">
                                    @service.Value("serviceTitle")
                                </h6>
                                <hr class="divider divider-default divider-sm" />
                                <p class="thumbnail-classic-text">
                                    @service.Value("serviceDescription")
                                </p>
                            </div>
                        </a>
                    </div>

                }
            }

        </div>
    </div>
</section>

<!-- Our Projects -->
@if (false) { 
<section class="section section-lg text-center bg-gray-lighter">
    <div class="container-wide">
        <div class="row justify-content-sm-center">
            <div class="col-lg-9 col-xl-8 col-xxl-6 text-center">
                <div class="text-center">
                    <a href="@HomePageLinkToProjects" class="animated-title-divider">
                        <h3>
                            @Model.Value("ourProjectsTitle")
                        </h3>
                        <div class="divider divider-default"></div>
                    </a>
                </div>
            </div>
        </div>
        <div class="isotope-wrap row row-0 row-md-30">
            <!-- Isotope Filters-->
            <div class="col-xl-12">
                <ul class="isotope-filters isotope-filters-horizontal">
                    <li class="block-top-level">
                        <p class="big">@Umbraco.GetDictionaryValue("Choose your project category")</p>
                        <!-- Isotope Filters-->
                        <button class="isotope-filters-toggle button button-xs button-primary" data-custom-toggle=".isotope-filters-list" data-custom-toggle-hide-on-blur="true">@Umbraco.GetDictionaryValue("Filter projects")<span class="caret"></span></button>
                        <ul class="isotope-filters-list">
                            <li><a class="active" data-isotope-filter="*" data-isotope-group="gallery" href="#">All Categories</a></li>

                            @foreach (var projetTypeCode in projectsTypeCodesAndTitle.Keys)
                            {
                                <li><a data-isotope-filter="@projetTypeCode" data-isotope-group="gallery" href="#">@projectsTypeCodesAndTitle[projetTypeCode]</a></li>
                            }

                        </ul>
                    </li>
                </ul>
            </div>
            <!-- Isotope Content-->
            <div class="col-xl-12">
                <div class="isotope" data-isotope-layout="fitRows" data-isotope-group="gallery">
                    <div class="row">

                        @{

                            var projectImageUrl = "";
                            var projectLargerImageUrl = "";

                            foreach (var project in Model.Value<IEnumerable<IPublishedContent>>("FeaturedProjects"))
                            {
                                projectImageUrl = project.Value<IPublishedContent>("projectThumbnailImage")?.Url() ?? "";
                                projectLargerImageUrl = project.Value<IPublishedContent>("projectLargeImage")?.Url() ?? "";

                                <div class="col-12 col-md-6 col-lg-4 isotope-item" data-filter="@project.Parent.Value("projectTypeUniqueEnglishCode")" data-lightgallery="group">
                                    <ul class="lightgallery-album">
                                        <li>
                                            <div class="gallery-item custom-fullsizer">
                                                <div class="gallery-item-image">
                                                    <figure>
                                                        <img src="@projectImageUrl" alt="" width="570" height="380" />
                                                    </figure>

                                                    <div class="caption">

                                                        <a href="@project.Url()" class="caption-title">@project.Value("projectTitle")</a>

                                                        <a href="@project.Url()" class="caption-text">
                                                            @project.Value("projectDescription")
                                                        </a>
                                                    </div>
                                                </div>
                                                <a href="@projectLargerImageUrl" data-lightgallery="item" class="fullsizer"><span>&nbsp;</span></a>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            }

                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
}

<!-- Our Team-->
<section class="section section-lg bg-default text-center">
    <div class="container container-wide">
        <div class="text-center">
            <a href="@HomePageLinkToOurTeam" class="animated-title-divider">
                <h3>
                    @Model.Value("ourTeamTitle")
                </h3>
                <div class="divider divider-default"></div>
            </a>
        </div>
        <!-- Owl Carousel-->
        <div class="owl-carousel owl-carousel-team" data-autoplay="true" data-items="1" data-md-items="2" data-lg-items="3"
             data-xl-items="4" data-xxl-items="6" data-stage-padding="0" data-loop="false" data-margin="0"
             data-mouse-drag="true" data-dots="true">

            @if (Model.Value<IEnumerable<IPublishedContent>>("ourTeamFeaturedPeople") != null)
            {
                var personImageUrl = "";
                var personContactEmail = "";

                foreach (var person in Model.Value<IEnumerable<IPublishedContent>>("ourTeamFeaturedPeople"))
                {
                    personImageUrl = person.Value<IPublishedContent>("employeeImage")?.Url() ?? "";
                    personContactEmail = person.Value("emailAddress")?.ToString() ?? "";
                    if (!string.IsNullOrEmpty(personContactEmail))
                    {
                        personContactEmail = "mailto:" + personContactEmail;
                    }

                    <div class="team-classic">
                        <div class="team-classic-image">
                            <figure>
                                <img src="@personImageUrl" alt="" width="270" height="270" />
                            </figure>
                            <div class="team-classic-image-caption">
                                <ul class="list-inline list-team">
                                    @if (person.Value("socialLinkLinkedIn") != null && !string.IsNullOrEmpty(person.Value("socialLinkLinkedIn").ToString()))
                                    {
                                        <li><a class="icon icon-sm-bigger icon-white mdi mdi-linkedin" target="_blank" href="@person.Value("socialLinkLinkedIn")"></a></li>
                                    }
                                    @if (person.Value("socialLinkFacebook") != null && !string.IsNullOrEmpty(person.Value("socialLinkFacebook").ToString()))
                                    {
                                        <li><a class="icon icon-sm-bigger icon-white mdi mdi-facebook" target="_blank" href="@person.Value("socialLinkFacebook")"></a></li>
                                    }
                                    @if (person.Value("socialLinkTwitter") != null && !string.IsNullOrEmpty(person.Value("socialLinkTwitter").ToString()))
                                    {
                                        <li><a class="icon icon-sm-bigger icon-white mdi mdi-twitter" target="_blank" href="@person.Value("socialLinkTwitter")"></a></li>
                                    }
                                    @if (person.Value("socialLinkInstagram") != null && !string.IsNullOrEmpty(person.Value("socialLinkInstagram").ToString()))
                                    {
                                        <li><a class="icon icon-sm-bigger icon-white mdi mdi-instagram" target="_blank" href="@person.Value("socialLinkInstagram")"></a></li>
                                    }
                                </ul>
                            </div>
                        </div>
                        <div class="team-classic-caption">
                            <h5><a class="team-classic-title" href="@person.Url()">@person.Value("personNameAndTitle")</a></h5>
                            <p class="team-classic-job-position">@person.Value("jobTitle")</p>
                            <a class="button button-xs button-default-outline" target="_blank" href="@personContactEmail">get in touch</a>
                        </div>
                    </div>
                }
            }

        </div>

        <a class="button button-primary" href="@HomePageLinkToOurTeam">@Model.Value("ourTeamViewAllTeamBottomLinkText")</a>
    </div>
</section>


