@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.Services>
@using ContentModels = Umbraco.Web.PublishedModels;
@{

    Layout = "master.cshtml";
    var home = Model.Root();

    var titleLinkAFewWordsAboutUs = Model.Value<IPublishedContent>("titleLinkAFewWordsAboutUs").Url();
    var ourAdvantagesTitleLink = Model.Value<IPublishedContent>("ourAdvantagesTitleLink").Url();
}


<!-- a few words About Us-->
<section class="section section-lg text-center text-md-left bg-default">
    <div class="container container-wide">
        <div class="row row-50 justify-content-md-center justify-content-xl-end flex-xl-row-reverse justify-content-xxl-end">
            <div class="col-md-9 col-lg-8 col-xl-6 col-xxl-5">
                <div class="box-range-content">
                    @*<h3>A few words About Us</h3>
                        <div class="divider divider-default"></div>*@

                    <a href="@titleLinkAFewWordsAboutUs" class="animated-title-divider longer2">
                        <h3>@Model.Value("titleAFewWordsAboutUs")</h3>
                        <div class="divider divider-default"></div>
                    </a>

                    <p class="heading-5">
                        @Model.Value("aFewWordsAboutUsFirstParagraphHeadingRow")
                    </p>
                    <p class="text-spacing-sm">
                        @Model.Value("aFewWordsAboutUsSecondParagraphRow")
                    </p>
                    <a class="button button-primary" href="@titleLinkAFewWordsAboutUs">@Model.Value("aFewWordsAboutUsLearnMoreBottomLinkText")</a>
                </div>
            </div>
            <div class="col-md-9 col-lg-8 col-xl-6 col-xxl-6 jp-video-init">
                <div class="build-video">
                    <div class="build-video-inner">
                        <img class="image-wrap" src="/images/block-video-870x500.png" alt="" width="870" height="500" />
                    </div>
                    <div class="build-video-element">
                        <div class="jp-video jp-video-single">
                            <div class="jp-type-playlist">
                                <!-- Hidden playlist for script-->
                                <ul class="jp-player-list">
                                    <li class="jp-player-list-item" data-jp-m4v="/video/video.mp4" data-jp-title="local video" data-jp-poster="/images/video-poster.jpg"></li>
                                </ul>
                                <!-- container in which our video will be played-->
                                <div class="jp-jplayer"></div>
                                <!-- main containers for our controls-->
                                <div class="jp-gui">
                                    <div class="jp-interface">
                                        <div class="jp-controls-holder">
                                            <!-- play and pause buttons--><a class="jp-play" href="javascript:;" tabindex="1">play</a><a class="jp-pause" href="javascript:;" tabindex="1">pause</a><span class="separator sep-1"></span>
                                            <!-- progress bar-->
                                            <div class="jp-progress">
                                                <div class="jp-seek-bar">
                                                    <div class="jp-play-bar"><span></span></div>
                                                </div>
                                            </div>
                                            <div class="jp-time-wrapper">
                                                <!-- time notifications-->
                                                <div class="jp-current-time"></div><span class="time-sep">/</span>
                                                <div class="jp-duration"></div>
                                            </div><span class="separator sep-2"></span>
                                            <!-- mute / unmute toggle--><a class="jp-mute" href="javascript:;" tabindex="1" title="mute">mute</a><a class="jp-unmute" href="javascript:;" tabindex="1" title="unmute">unmute</a>
                                            <!-- volume bar-->
                                            <div class="jp-volume-bar">
                                                <div class="jp-volume-bar-value"><span class="handle"></span></div>
                                            </div><span class="separator sep-2"></span>
                                            <!-- full screen toggle--><a class="jp-full-screen" href="javascript:;" tabindex="1" title="full screen">full screen</a><a class="jp-restore-screen" href="javascript:;" tabindex="1" title="restore screen">restore screen</a>
                                        </div>
                                        <!-- end jp-controls-holder-->
                                    </div>
                                    <!-- end jp-interface-->
                                </div>
                                <!-- end jp-gui-->
                                <!-- unsupported message-->
                                <div class="jp-playlist">
                                    <ul>
                                        <li></li>
                                    </ul>
                                </div>
                                <div class="jp-no-solution"><span>Update Required</span>Here's a message which will appear if the video isn't supported. A Flash alternative can be used here if you fancy it.</div>
                                <!-- end jp_container_1-->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="section section-lg text-center bg-gray-darker">
    <div class="container-wide">
        
        <a href="@ourAdvantagesTitleLink" class="animated-title-divider longer">
            <h3>@Model.Value("ourAdvantagesTitle")</h3>
            <div class="divider divider-default"></div>
        </a>

        <div class="row row-50 justify-content-sm-center text-left">

            @foreach (var advantage in Model.Value<IEnumerable<IPublishedContent>>("featuredOurAdvantages"))
            {

                <div class="ArticleWrapper col-sm-10 col-md-6 col-xl-3">
                    <a class="ArticleWrapper" href="@advantage.Url()">
                        <article class="box-minimal box-minimal-border">
                            <div class="box-minimal-icon mdi @advantage.Value("thumbnailImageCSSClass")"></div>
                            <p class="big box-minimal-title">@advantage.Value("advantageTitle")</p>
                            @*<hr>*@
                            <div class="box-minimal-text">
                                @advantage.Value("advantageDescription")
                            </div>
                            <div class="read-more">
                                @*<a href="@advantage.Url()">Read More</a>*@
                                <label>@Umbraco.GetDictionaryValue("read more")</label>
                            </div>
                        </article>
                    </a>
                </div>
            }

            @*<div class="col-sm-10 col-md-6 col-xl-3">
                    <article class="box-minimal box-minimal-border">
                        <div class="box-minimal-icon mdi mdi-thumb-up-outline"></div>
                        <p class="big box-minimal-title">Individual Approach</p>
                        <hr>
                        <div class="box-minimal-text">We use an individual approach to each client and we never offer you a set of standard decisions for your business.</div>
                    </article>
                </div>
                <div class="col-sm-10 col-md-6 col-xl-3">
                    <article class="box-minimal box-minimal-border">
                        <div class="box-minimal-icon mdi mdi-account-multiple"></div>
                        <p class="big box-minimal-title">Qualified Employers</p>
                        <hr>
                        <div class="box-minimal-text">Effective is a team of designers, developers, marketing experts and managers who are ready to work for a personalized IT solution.</div>
                    </article>
                </div>
                <div class="col-sm-10 col-md-6 col-xl-3">
                    <article class="box-minimal box-minimal-border">
                        <div class="box-minimal-icon mdi mdi-headset"></div>
                        <p class="big box-minimal-title">24/7 Online Support</p>
                        <hr>
                        <div class="box-minimal-text">Our online support is available 24 hours a day to answer your every question and help you solve any issue you may have with our products and services.</div>
                    </article>
                </div>
                <div class="col-sm-10 col-md-6 col-xl-3">
                    <article class="box-minimal box-minimal-border">
                        <div class="box-minimal-icon mdi mdi-credit-card"></div>
                        <p class="big box-minimal-title">Various Payment Methods</p>
                        <hr>
                        <div class="box-minimal-text">We provide a variety of payment methods that include Paypal, Visa/Mastercard/American Express and lots of others, which can be customized.</div>
                    </article>
                </div>*@
        </div>
    </div>
</section>

@if (Model.Children().Where(x => x.IsVisible()).Count() > 0)
{
    int counterForFlippedSideCSSClass = -1;
    var filpedSideCssClass = "";
    var innerContentCSSClassFlipFixes = "";
    var imageUrlServiceThumbnail = "";

    foreach (var serviceNodeDetails in Model.Children().Where(x => x.IsVisible()))
    {
        counterForFlippedSideCSSClass++;
        if (counterForFlippedSideCSSClass % 2 == 0)
        {
            filpedSideCssClass = "section-md-reverse";
            innerContentCSSClassFlipFixes = "justify-content-lg-end justify-content-xl-end";
        }
        else
        {
            filpedSideCssClass = "";
            innerContentCSSClassFlipFixes = "justify-content-lg-start justify-content-xl-between";
        }
        imageUrlServiceThumbnail = serviceNodeDetails.Value<IPublishedContent>("serviceThumbnailImage")?.Url ?? "";

        <section class="section section-wrap section-wrap-equal @filpedSideCssClass">
            <div class="section-wrap-inner">
                <div class="container container-bigger">
                    <div class="row row-ten justify-content-md-center @innerContentCSSClassFlipFixes">
                        <div class="col-sm-8 col-md-4 col-lg-4">
                            <div class="section-lg">
                                <a href="@serviceNodeDetails.Url()" class="animated-title-divider longer2">
                                    <h3 class="little-smaller">@serviceNodeDetails.Value("serviceTitle")</h3>
                                    <div class="divider divider-default"></div>
                                </a>
                                <p>
                                    @serviceNodeDetails.Value("serviceDescription")
                                </p>
                                <div class="text-center form-button">
                                    <a class="button button-primary" href="@serviceNodeDetails.Url()">learn more</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="section-wrap-aside section-wrap-image">
                    <img src="@imageUrlServiceThumbnail" alt="@serviceNodeDetails.Value("serviceTitle")" title="@serviceNodeDetails.Value("serviceTitle")" width="960" height="660" />
                </div>
            </div>
        </section>
    }
}
